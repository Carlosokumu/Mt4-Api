'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _httpClient = require('./clients/httpClient');

var _httpClient2 = _interopRequireDefault(_httpClient);

var _domain = require('./clients/domain.client');

var _domain2 = _interopRequireDefault(_domain);

var _metaStats = require('./clients/metaStats.client');

var _metaStats2 = _interopRequireDefault(_metaStats);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * MetaStats API SDK
 */
class MetaStats {

  /**
   * @typedef {Object} ConnectionOptions connection options
   * @property {Number} [requestTimeout] request timeout in seconds, default 60
   * @property {String} [domain] request domain, default 'agiliumtrade.agiliumtrade.ai'
   * @property {RetryOptions} [retryOpts] retry options
   */

  /**
   * Constructs MetaStats class instance
   * @param {String} token authorization token
   * @param {ConnectionOptions} [opts] connection options
   */
  constructor(token, opts = {}) {
    const httpClient = new _httpClient2.default(opts.requestTimeout, opts.retryOpts);
    const domainClient = new _domain2.default(httpClient, token, opts.domain);
    this._metaStatsClient = new _metaStats2.default(domainClient);
  }

  /**
   * Returns the getMetrics MetaStatsClient method bound to the MetaStatsClient instance
   * @returns {Function} getMetrics MetaStatsClient method
   */
  get getMetrics() {
    return this._metaStatsClient.getMetrics.bind(this._metaStatsClient);
  }

  /**
   * Returns the getAccountTrades MetaStatsClient method bound to the MetaStatsClient instance
   * @returns {Function} getAccountTrades MetaStatsClient method
   */
  get getAccountTrades() {
    return this._metaStatsClient.getAccountTrades.bind(this._metaStatsClient);
  }

  /**
   * Returns the getAccountOpenTrades MetaStatsClient method bound to the MetaStatsClient instance
   * @returns {Function} getAccountOpenTrades MetaStatsClient method
   */
  get getAccountOpenTrades() {
    return this._metaStatsClient.getAccountOpenTrades.bind(this._metaStatsClient);
  }
}
exports.default = MetaStats;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2xpYi9tZXRhU3RhdHMuZXM2Il0sIm5hbWVzIjpbIk1ldGFTdGF0cyIsImNvbnN0cnVjdG9yIiwidG9rZW4iLCJvcHRzIiwiaHR0cENsaWVudCIsIkh0dHBDbGllbnQiLCJyZXF1ZXN0VGltZW91dCIsInJldHJ5T3B0cyIsImRvbWFpbkNsaWVudCIsIkRvbWFpbkNsaWVudCIsImRvbWFpbiIsIl9tZXRhU3RhdHNDbGllbnQiLCJNZXRhU3RhdHNDbGllbnQiLCJnZXRNZXRyaWNzIiwiYmluZCIsImdldEFjY291bnRUcmFkZXMiLCJnZXRBY2NvdW50T3BlblRyYWRlcyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUVBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUE7OztBQUdlLE1BQU1BLFNBQU4sQ0FBZ0I7O0FBRTdCOzs7Ozs7O0FBT0E7Ozs7O0FBS0FDLGNBQVlDLEtBQVosRUFBbUJDLE9BQU8sRUFBMUIsRUFBOEI7QUFDNUIsVUFBTUMsYUFBYSxJQUFJQyxvQkFBSixDQUFlRixLQUFLRyxjQUFwQixFQUFvQ0gsS0FBS0ksU0FBekMsQ0FBbkI7QUFDQSxVQUFNQyxlQUFlLElBQUlDLGdCQUFKLENBQWlCTCxVQUFqQixFQUE2QkYsS0FBN0IsRUFBb0NDLEtBQUtPLE1BQXpDLENBQXJCO0FBQ0EsU0FBS0MsZ0JBQUwsR0FBd0IsSUFBSUMsbUJBQUosQ0FBb0JKLFlBQXBCLENBQXhCO0FBQ0Q7O0FBRUQ7Ozs7QUFJQSxNQUFJSyxVQUFKLEdBQWlCO0FBQ2YsV0FBTyxLQUFLRixnQkFBTCxDQUFzQkUsVUFBdEIsQ0FBaUNDLElBQWpDLENBQXNDLEtBQUtILGdCQUEzQyxDQUFQO0FBQ0Q7O0FBRUQ7Ozs7QUFJQSxNQUFJSSxnQkFBSixHQUF1QjtBQUNyQixXQUFPLEtBQUtKLGdCQUFMLENBQXNCSSxnQkFBdEIsQ0FBdUNELElBQXZDLENBQTRDLEtBQUtILGdCQUFqRCxDQUFQO0FBQ0Q7O0FBRUQ7Ozs7QUFJQSxNQUFJSyxvQkFBSixHQUEyQjtBQUN6QixXQUFPLEtBQUtMLGdCQUFMLENBQXNCSyxvQkFBdEIsQ0FBMkNGLElBQTNDLENBQWdELEtBQUtILGdCQUFyRCxDQUFQO0FBQ0Q7QUExQzRCO2tCQUFWWCxTIiwiZmlsZSI6Im1ldGFTdGF0cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IEh0dHBDbGllbnQgZnJvbSAnLi9jbGllbnRzL2h0dHBDbGllbnQnO1xuaW1wb3J0IERvbWFpbkNsaWVudCBmcm9tICcuL2NsaWVudHMvZG9tYWluLmNsaWVudCc7XG5pbXBvcnQgTWV0YVN0YXRzQ2xpZW50IGZyb20gJy4vY2xpZW50cy9tZXRhU3RhdHMuY2xpZW50JztcblxuLyoqXG4gKiBNZXRhU3RhdHMgQVBJIFNES1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZXRhU3RhdHMge1xuXG4gIC8qKlxuICAgKiBAdHlwZWRlZiB7T2JqZWN0fSBDb25uZWN0aW9uT3B0aW9ucyBjb25uZWN0aW9uIG9wdGlvbnNcbiAgICogQHByb3BlcnR5IHtOdW1iZXJ9IFtyZXF1ZXN0VGltZW91dF0gcmVxdWVzdCB0aW1lb3V0IGluIHNlY29uZHMsIGRlZmF1bHQgNjBcbiAgICogQHByb3BlcnR5IHtTdHJpbmd9IFtkb21haW5dIHJlcXVlc3QgZG9tYWluLCBkZWZhdWx0ICdhZ2lsaXVtdHJhZGUuYWdpbGl1bXRyYWRlLmFpJ1xuICAgKiBAcHJvcGVydHkge1JldHJ5T3B0aW9uc30gW3JldHJ5T3B0c10gcmV0cnkgb3B0aW9uc1xuICAgKi9cblxuICAvKipcbiAgICogQ29uc3RydWN0cyBNZXRhU3RhdHMgY2xhc3MgaW5zdGFuY2VcbiAgICogQHBhcmFtIHtTdHJpbmd9IHRva2VuIGF1dGhvcml6YXRpb24gdG9rZW5cbiAgICogQHBhcmFtIHtDb25uZWN0aW9uT3B0aW9uc30gW29wdHNdIGNvbm5lY3Rpb24gb3B0aW9uc1xuICAgKi9cbiAgY29uc3RydWN0b3IodG9rZW4sIG9wdHMgPSB7fSkge1xuICAgIGNvbnN0IGh0dHBDbGllbnQgPSBuZXcgSHR0cENsaWVudChvcHRzLnJlcXVlc3RUaW1lb3V0LCBvcHRzLnJldHJ5T3B0cyk7XG4gICAgY29uc3QgZG9tYWluQ2xpZW50ID0gbmV3IERvbWFpbkNsaWVudChodHRwQ2xpZW50LCB0b2tlbiwgb3B0cy5kb21haW4pO1xuICAgIHRoaXMuX21ldGFTdGF0c0NsaWVudCA9IG5ldyBNZXRhU3RhdHNDbGllbnQoZG9tYWluQ2xpZW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBnZXRNZXRyaWNzIE1ldGFTdGF0c0NsaWVudCBtZXRob2QgYm91bmQgdG8gdGhlIE1ldGFTdGF0c0NsaWVudCBpbnN0YW5jZVxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IGdldE1ldHJpY3MgTWV0YVN0YXRzQ2xpZW50IG1ldGhvZFxuICAgKi9cbiAgZ2V0IGdldE1ldHJpY3MoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21ldGFTdGF0c0NsaWVudC5nZXRNZXRyaWNzLmJpbmQodGhpcy5fbWV0YVN0YXRzQ2xpZW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBnZXRBY2NvdW50VHJhZGVzIE1ldGFTdGF0c0NsaWVudCBtZXRob2QgYm91bmQgdG8gdGhlIE1ldGFTdGF0c0NsaWVudCBpbnN0YW5jZVxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IGdldEFjY291bnRUcmFkZXMgTWV0YVN0YXRzQ2xpZW50IG1ldGhvZFxuICAgKi9cbiAgZ2V0IGdldEFjY291bnRUcmFkZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21ldGFTdGF0c0NsaWVudC5nZXRBY2NvdW50VHJhZGVzLmJpbmQodGhpcy5fbWV0YVN0YXRzQ2xpZW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBnZXRBY2NvdW50T3BlblRyYWRlcyBNZXRhU3RhdHNDbGllbnQgbWV0aG9kIGJvdW5kIHRvIHRoZSBNZXRhU3RhdHNDbGllbnQgaW5zdGFuY2VcbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBnZXRBY2NvdW50T3BlblRyYWRlcyBNZXRhU3RhdHNDbGllbnQgbWV0aG9kXG4gICAqL1xuICBnZXQgZ2V0QWNjb3VudE9wZW5UcmFkZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21ldGFTdGF0c0NsaWVudC5nZXRBY2NvdW50T3BlblRyYWRlcy5iaW5kKHRoaXMuX21ldGFTdGF0c0NsaWVudCk7XG4gIH1cbn1cbiJdfQ==